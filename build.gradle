buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'io.franzbecker:gradle-lombok:1.14'
        classpath 'net.researchgate:gradle-release:2.6.0'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2'
    }
}

apply plugin: 'org.sonarqube'

// def allTestCoverageFile = "$buildDir/jacoco/allTestCoverage.exec"
allprojects {
    apply plugin: 'java-library'
    apply plugin: 'io.franzbecker.gradle-lombok'
    apply plugin: 'jacoco'

    lombok {
        version = '1.18.4'
        sha256 = ""
    }

    jacoco {
        toolVersion = "0.8.2"
    }

    // build fails for java 11, let's wait for a newer lombok version
    sourceCompatibility = 1.10
    targetCompatibility = 1.10

    dependencies {
        implementation group: 'com.google.guava', name: 'guava', version: '26.0-jre'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.0'
        testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
    }

    repositories {
        jcenter()
    }

    test {
        testLogging {
            showStandardStreams = true
        }

        useJUnitPlatform()
        systemProperty 'java.util.logging.config.file', 'src/test/resources/logging.properties'
    }

    sonarqube {
        properties {
            property "sonar.projectName", "Dedupe"
            property "sonar.projectKey", "bakdata-dedupe"
            property "sonar.jacoco.reportPaths", jacocoMerge.destinationFile
        }
    }

    jacocoTestReport.dependsOn(test)
}

task jacocoMerge(type: JacocoMerge) {
    dependsOn subprojects.jacocoTestReport

    executionData subprojects.test
}

tasks.sonarqube.dependsOn(jacocoMerge)
//jacocoTestReport {
//    dependsOn jacocoMerge
//    executionData = files(jacocoMerge.destinationFile)
//    sourceDirectories = files(subprojects.sourceSets.main.java.sourceDirectories)
//    classDirectories = files(subprojects.sourceSets.main.output)
//}
